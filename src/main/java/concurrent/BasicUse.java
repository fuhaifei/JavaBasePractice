package concurrent;
/**
 * 并发基本概念总结：
 * 1. 进程和线程的区别
 *
 * 2. 临界区（Critical Section）和 竞态条件（Race Condition）
 *
 * 3. String/Integer等不可变对象是线程安全的
 *
 * 4. 死锁/活锁/饥饿
 *  * 死锁条件：互斥，占有且等待，不存在抢占，环状等待
 *  * 活锁：任务或者执行者没有被阻塞，由于某些条件没有满足，导致一直重复尝试，失败，尝试，失败
 *  * 饥饿：由于任务优先级较低，一直无法获取不到锁，导致程序始终无法执行的情况
 * 5. 伪共享问题
 *  * cpu读取数据以块(cpu line，一般为64byte)的形式，当分布在不同核的线程操作位于一个缓存块的数据时，任意一个线程的修改都会导致另外一个核心加载缓存失效
 *  * 解决方案：通过将添加填充，使得两个相邻的数据分布于不同的缓存块中
 * 6. 不同任务类型应该使用不同的线程池，这样能够避免饥饿，并能提升效率
 * */
public class BasicUse {
}
